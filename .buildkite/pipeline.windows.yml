steps:
- label: "Compile Ray"
  parallelism: 6
  commands:
    - mkdir ray
    - cd ray
    - git config --global core.symlinks true
    - git config --global core.autocrlf false
    - git init
    - git remote add origin https://github.com/ray-project/ray.git
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then export BUILDKITE_GIT_REF=${BUILDKITE_COMMIT}; else export BUILDKITE_GIT_REF=refs/pull/${BUILDKITE_PULL_REQUEST}/head; fi
    - git fetch -v --prune -- origin ${BUILDKITE_GIT_REF}
    - git checkout -f ${BUILDKITE_COMMIT}
    - export PYTHON="3.6"
    - export RAY_USE_RANDOM_PORTS="1"
    - export RAY_DEFAULT_BUILD="1"
    - export WINDOWS_WHEELS="1"
    - export LC_ALL="en_US.UTF-8"
    - export LANG="en_US.UTF-8"
    - . ./ci/travis/ci.sh init
    - . ./ci/travis/ci.sh build
    - if [ "${BUILDKITE_PARALLEL_JOB}" = "0" ]; then . ./ci/travis/ci.sh test_core; fi
    # Notice the below is sharded!
    - . ./ci/travis/ci.sh test_python

